import logging
from datetime import datetime
from rich.console import Console
from rich.logging import RichHandler
from rich.markup import escape

console = Console(width=100)


class StylishLogger:
    """–°—Ç–∏–ª—å–Ω—ã–π –ª–æ–≥–≥–µ—Ä –¥–ª—è Discord-–±–æ—Ç–∞"""

    COLOR_MAP = {
        "info": "green",
        "error": "red",
        "warning": "yellow",
        "debug": "cyan"
    }

    ICON_MAP = {
        "info": "‚ÑπÔ∏è",
        "error": "‚ùå",
        "warning": "‚ö†Ô∏è",
        "debug": "üîç"
    }

    def __init__(self, name: str = "VerificationBot"):
        self.logger = logging.getLogger(name)
        self.logger.setLevel(logging.DEBUG)

        # –û—á–∏—Å—Ç–∏–º —Å—Ç–∞—Ä—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
        self.logger.handlers.clear()

        # –ù–∞—Å—Ç—Ä–æ–∏–º RichHandler
        handler = RichHandler(
            console=console,
            show_time=False,
            show_path=False,
            markup=True,
            rich_tracebacks=True
        )

        # –ü—Ä–æ—Å—Ç–æ–π —Ñ–æ—Ä–º–∞—Ç—Ç–µ—Ä
        formatter = logging.Formatter("%(message)s")
        handler.setFormatter(formatter)
        self.logger.addHandler(handler)

        # –£–±–∞–≤–∏–º –≥—Ä–æ–º–∫–æ—Å—Ç—å discord –ª–æ–≥–æ–≤
        logging.getLogger("discord").setLevel(logging.WARNING)

    def _log(self, level: str, message: str):
        """–û–±—â–∏–π –º–µ—Ç–æ–¥ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è —Å —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ–º"""
        icon = self.ICON_MAP.get(level, "")
        color = self.COLOR_MAP.get(level, "white")
        timestamp = datetime.now().strftime("%H:%M:%S")

        formatted = f"[dim]{timestamp}[/dim] {icon} [{color}]{escape(message)}[/{color}]"
        getattr(self.logger, level)(formatted)

    def info(self, message: str):
        self._log("info", message)

    def error(self, message: str):
        self._log("error", message)

    def warning(self, message: str):
        self._log("warning", message)

    def debug(self, message: str):
        self._log("debug", message)

    def success(self, message: str):
        """–û—Ç–¥–µ–ª—å–Ω—ã–π –ª–æ–≥ –¥–ª—è —É—Å–ø–µ—à–Ω—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π"""
        timestamp = datetime.now().strftime("%H:%M:%S")
        formatted = f"[dim]{timestamp}[/dim] ‚úÖ [bold green]{escape(message)}[/bold green]"
        self.logger.info(formatted)
        
    def papka(self, message: str):
        """–û—Ç–¥–µ–ª—å–Ω—ã–π –ª–æ–≥ –¥–ª—è —É—Å–ø–µ—à–Ω—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π"""
        timestamp = datetime.now().strftime("%H:%M:%S")
        formatted = f"[dim]{timestamp}[/dim] üìÅ [bold green]{escape(message)}[/bold green]"
        self.logger.info(formatted)

    def separator(self, title: str = ""):
        """–†–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å –≤ –ª–æ–≥–∞—Ö"""
        if title:
            console.print(f"\n[bold blue]{'=' * 20} {title} {'=' * 20}[/bold blue]")
        else:
            console.print(f"[dim]{'‚îÄ' * 60}[/dim]")



# –°–æ–∑–¥–∞–Ω–∏–µ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ –ª–æ–≥–≥–µ—Ä–∞
logger = StylishLogger()
