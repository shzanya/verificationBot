import os
import asyncio
from typing import Callable
from datetime import datetime
import discord
from discord.sinks import WaveSink
from utils.logger import logger
from utils.helpers import sanitize_filename
from core.exceptions import RecordingException

class CustomWaveSink(WaveSink):
    """–ö–∞—Å—Ç–æ–º–Ω—ã–π Sink –¥–ª—è –∑–∞–ø–∏—Å–∏ –∞—É–¥–∏–æ"""
    def __init__(self):
        super().__init__()

class RecordingService:
    """–°–µ—Ä–≤–∏—Å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≥–æ–ª–æ—Å–æ–≤—ã–º–∏ –∑–∞–ø–∏—Å—è–º–∏"""
   
    def __init__(self):
        self.active_recordings = {}
   
    async def start_recording(
        self,
        voice_client: discord.VoiceClient,
        duration: int,
        callback: Callable,
        session_id: str
    ) -> bool:
        """–ó–∞–ø—É—Å—Ç–∏—Ç—å –∑–∞–ø–∏—Å—å –Ω–∞ –∑–∞–¥–∞–Ω–Ω—É—é –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å"""
        try:
            if session_id in self.active_recordings:
                logger.warning(f"üéôÔ∏è –ó–∞–ø–∏—Å—å —É–∂–µ –∞–∫—Ç–∏–≤–Ω–∞ –¥–ª—è —Å–µ—Å—Å–∏–∏ {session_id}")
                return False
           
            sink = CustomWaveSink()
            self.active_recordings[session_id] = {
                'sink': sink,
                'start_time': datetime.utcnow(),
                'duration': duration,
                'voice_client': voice_client,
                'stop_task': None
            }
           
            # –ó–∞–ø—É—Å–∫–∞–µ–º –∑–∞–ø–∏—Å—å
            voice_client.start_recording(sink, callback=callback)
            logger.info(f"üéôÔ∏è –ó–∞–ø–∏—Å—å –Ω–∞—á–∞—Ç–∞ –Ω–∞ {duration} —Å–µ–∫—É–Ω–¥ –¥–ª—è —Å–µ—Å—Å–∏–∏ {session_id}")
           
            # –°–æ–∑–¥–∞–µ–º –∑–∞–¥–∞—á—É –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –æ—Å—Ç–∞–Ω–æ–≤–∫–∏
            stop_task = asyncio.create_task(self._auto_stop_recording(voice_client, session_id, duration))
            self.active_recordings[session_id]['stop_task'] = stop_task
           
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–ø–∏—Å–∏ (–Ω–µ–±–ª–æ–∫–∏—Ä—É—é—â–∏–π)
            asyncio.create_task(self._show_recording_indicator(voice_client.guild, session_id, duration))
           
            return True
       
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –∑–∞–ø–∏—Å–∏: {e}")
            if session_id in self.active_recordings:
                del self.active_recordings[session_id]
            raise RecordingException(f"–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞—á–∞—Ç—å –∑–∞–ø–∏—Å—å: {e}")

    async def _auto_stop_recording(self, voice_client: discord.VoiceClient, session_id: str, duration: int):
        """–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∑–∞–ø–∏—Å—å —á–µ—Ä–µ–∑ –∑–∞–¥–∞–Ω–Ω–æ–µ –≤—Ä–µ–º—è"""
        try:
            await asyncio.sleep(duration)
            
            if session_id in self.active_recordings and voice_client.recording:
                voice_client.stop_recording()
                
                # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∑–∞–ø–∏—Å–∏
                recording_info = self.active_recordings[session_id]
                start_time = recording_info.get('start_time', datetime.utcnow())
                actual_duration = (datetime.utcnow() - start_time).total_seconds()
                
                logger.success(f"üéôÔ∏è –ó–∞–ø–∏—Å—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ –¥–ª—è —Å–µ—Å—Å–∏–∏ {session_id}")
                logger.success(f"üìä –ó–∞–ø–∏—Å—å {session_id}: —Ñ–∞–∫—Ç–∏—á–µ—Å–∫–∞—è –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å {actual_duration:.1f}—Å")
                
        except asyncio.CancelledError:
            logger.info(f"‚èπÔ∏è –ê–≤—Ç–æ–æ—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–ø–∏—Å–∏ –æ—Ç–º–µ–Ω–µ–Ω–∞ –¥–ª—è —Å–µ—Å—Å–∏–∏ {session_id}")
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –∞–≤—Ç–æ–æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –∑–∞–ø–∏—Å–∏: {e}")
   
    async def _show_recording_indicator(self, guild: discord.Guild, session_id: str, duration: int):
        """–ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–ø–∏—Å–∏ –≤ —Å–∏—Å—Ç–µ–º–Ω–æ–º –∫–∞–Ω–∞–ª–µ (–µ—Å–ª–∏ –µ—Å—Ç—å)"""
        try:
            # –ü–æ–ø—ã—Ç–∞–µ–º—Å—è –Ω–∞–π—Ç–∏ —Å–∏—Å—Ç–µ–º–Ω—ã–π –∫–∞–Ω–∞–ª
            system_channel = None
            for channel in guild.text_channels:
                if '–≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—è' in channel.name.lower() or 'verification' in channel.name.lower():
                    system_channel = channel
                    break
            
            if not system_channel:
                return  # –ï—Å–ª–∏ –Ω–µ—Ç –ø–æ–¥—Ö–æ–¥—è—â–µ–≥–æ –∫–∞–Ω–∞–ª–∞, –ø—Ä–æ—Å—Ç–æ –ø—Ä–æ–ø—É—Å–∫–∞–µ–º
            
            # –°–æ–∑–¥–∞–µ–º –∫—Ä–∞—Å–∏–≤—ã–π –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä
            embed = discord.Embed(
                title="üî¥ –°–ò–°–¢–ï–ú–ê –ó–ê–ü–ò–°–ò –ê–ö–¢–ò–í–ù–ê",
                description=f"""
```yaml
‚îå‚îÄ –°–¢–ê–¢–£–° –ó–ê–ü–ò–°–ò ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
‚îÇ –°–µ—Å—Å–∏—è:   {session_id[:20]}{'...' if len(session_id) > 20 else ''}
‚îÇ –¢–∞–π–º–µ—Ä:   {duration} —Å–µ–∫—É–Ω–¥
‚îÇ –†–µ–∂–∏–º:    üî¥ LIVE RECORDING
‚îÇ –í—Ä–µ–º—è:    {datetime.utcnow().strftime('%H:%M:%S')} UTC
‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò
```

‚è∫Ô∏è **–ò–¥–µ—Ç –∑–∞–ø–∏—Å—å –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –æ—Ç–≤–µ—Ç–∞...**

> üé§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–≤–µ—á–∞–µ—Ç –Ω–∞ –≤–æ–ø—Ä–æ—Å
> ‚è±Ô∏è –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∞ —á–µ—Ä–µ–∑ **{duration}—Å**
                """,
                color=0xff0000,  # –ö—Ä–∞—Å–Ω—ã–π –¥–ª—è –∞–∫—Ç–∏–≤–Ω–æ–π –∑–∞–ø–∏—Å–∏
                timestamp=datetime.utcnow()
            )

            embed.add_field(
                name="üìä –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –∑–∞–ø–∏—Å–∏",
                value=f"""```ini
[AUDIO_SETTINGS]
Format=WAV
Quality=44.1kHz
Channels=Stereo
Duration={duration}s
```""",
                inline=False
            )

            embed.set_footer(
                text="üéµ –°–∏—Å—Ç–µ–º–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –∑–∞–ø–∏—Å–∏ ‚Ä¢ REC MODE",
                icon_url="https://cdn.discordapp.com/emojis/741339402298785864.gif"
            )

            await system_channel.send(embed=embed, delete_after=duration + 5)
            
        except Exception as e:
            logger.debug(f"–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–∫–∞–∑–∞—Ç—å –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–ø–∏—Å–∏: {e}")
   
    def stop_recording(self, voice_client: discord.VoiceClient, session_id: str) -> bool:
        """–û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∞–∫—Ç–∏–≤–Ω—É—é –∑–∞–ø–∏—Å—å"""
        try:
            if session_id not in self.active_recordings:
                logger.warning(f"‚èπÔ∏è –ù–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–π –∑–∞–ø–∏—Å–∏ –¥–ª—è —Å–µ—Å—Å–∏–∏ {session_id}")
                return False
           
            recording_info = self.active_recordings[session_id]
            
            # –û—Ç–º–µ–Ω—è–µ–º –∑–∞–¥–∞—á—É –∞–≤—Ç–æ–æ—Å—Ç–∞–Ω–æ–≤–∫–∏, –µ—Å–ª–∏ –æ–Ω–∞ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
            if recording_info.get('stop_task'):
                recording_info['stop_task'].cancel()
           
            if voice_client.recording:
                voice_client.stop_recording()
                logger.info(f"‚èπÔ∏è –ó–∞–ø–∏—Å—å –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –¥–ª—è —Å–µ—Å—Å–∏–∏ {session_id}")
           
            # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∑–∞–ø–∏—Å–∏ –ø–µ—Ä–µ–¥ —É–¥–∞–ª–µ–Ω–∏–µ–º
            start_time = recording_info.get('start_time', datetime.utcnow())
            actual_duration = (datetime.utcnow() - start_time).total_seconds()
            
            logger.success(f"üìä –ó–∞–ø–∏—Å—å {session_id}: —Ñ–∞–∫—Ç–∏—á–µ—Å–∫–∞—è –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å {actual_duration:.1f}—Å")
           
            del self.active_recordings[session_id]
            return True
       
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –∑–∞–ø–∏—Å–∏: {e}")
            return False
   
    async def save_audio_files(
        self,
        sink: WaveSink,
        guild: discord.Guild,
        output_dir: str = "temp_recordings"
    ) -> list:
        """–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∑–∞–ø–∏—Å–∞–Ω–Ω—ã–µ –∞—É–¥–∏–æ—Ñ–∞–π–ª—ã —Å –¥–µ—Ç–∞–ª—å–Ω–æ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–æ–π"""
        saved_files = []
        stats = {
            'total_files': 0,
            'total_size': 0,
            'users_recorded': [],
            'processing_start': datetime.utcnow()
        }
       
        try:
            os.makedirs(output_dir, exist_ok=True)
            logger.info(f"üìÅ –°–æ–∑–¥–∞–Ω–∞/–ø—Ä–æ–≤–µ—Ä–µ–Ω–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: {output_dir}")
           
            for user_id, audio in sink.audio_data.items():
                member = guild.get_member(user_id)
                if not member:
                    logger.warning(f"‚ö†Ô∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –≥–∏–ª—å–¥–∏–∏")
                    continue
               
                safe_name = sanitize_filename(member.display_name)
                filename = f"{safe_name}_{user_id}_{datetime.utcnow().strftime('%H%M%S')}.wav"
                filepath = os.path.join(output_dir, filename)
               
                # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–∞–π–ª
                with open(filepath, "wb") as f:
                    audio_buffer = audio.file.getbuffer()
                    f.write(audio_buffer)
                    file_size = len(audio_buffer)
               
                # –°–æ–±–∏—Ä–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
                stats['total_files'] += 1
                stats['total_size'] += file_size
                stats['users_recorded'].append(member.display_name)
               
                file_info = {
                    'user_id': user_id,
                    'member': member,
                    'filename': filename,
                    'filepath': filepath,
                    'size_bytes': file_size,
                    'size_kb': file_size / 1024,
                    'timestamp': datetime.utcnow()
                }
                saved_files.append(file_info)
               
                logger.success(f"üíæ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∞ –∑–∞–ø–∏—Å—å: {member.display_name} ‚Üí {filename} ({file_size/1024:.1f} KB)")
           
            # –§–∏–Ω–∞–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
            processing_time = (datetime.utcnow() - stats['processing_start']).total_seconds()
            
            logger.info(f"""
üìä –°–¢–ê–¢–ò–°–¢–ò–ö–ê –°–û–•–†–ê–ù–ï–ù–ò–Ø:
‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
‚îÇ –§–∞–π–ª–æ–≤ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ: {stats['total_files']:5d} ‚îÇ
‚îÇ –û–±—â–∏–π —Ä–∞–∑–º–µ—Ä:     {stats['total_size']/1024:.1f} KB ‚îÇ
‚îÇ –í—Ä–µ–º—è –æ–±—Ä–∞–±–æ—Ç–∫–∏:  {processing_time:.2f}s ‚îÇ
‚îÇ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:    {len(stats['users_recorded']):5d} ‚îÇ
‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò
–£—á–∞—Å—Ç–Ω–∏–∫–∏: {', '.join(stats['users_recorded'][:3])}{'...' if len(stats['users_recorded']) > 3 else ''}
            """)
           
            return saved_files
       
        except Exception as e:
            logger.error(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –∞—É–¥–∏–æ: {e}")
            
            # –°–æ–∑–¥–∞–µ–º —ç–º–±–µ–¥ –æ—à–∏–±–∫–∏ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ –∫–∞–Ω–∞–ª (–µ—Å–ª–∏ –≤–æ–∑–º–æ–∂–Ω–æ)
            try:
                error_embed = discord.Embed(
                    title="üí• –û–®–ò–ë–ö–ê –°–û–•–†–ê–ù–ï–ù–ò–Ø –ê–£–î–ò–û–§–ê–ô–õ–û–í",
                    description=f"""
```yaml
‚îå‚îÄ –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê ‚îÄ‚îê
‚îÇ –ú–æ–¥—É–ª—å:  RecordingService
‚îÇ –ú–µ—Ç–æ–¥:   save_audio_files
‚îÇ –í—Ä–µ–º—è:   {datetime.utcnow().strftime('%H:%M:%S')} UTC
‚îÇ –§–∞–π–ª–æ–≤:  {stats['total_files']} –∏–∑ {len(sink.audio_data)}
‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò
```

‚ùå **–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –∑–∞–ø–∏—Å–µ–π:**
```fix
{str(e)[:150]}{'...' if len(str(e)) > 150 else ''}
```

> üîß **–ß–∞—Å—Ç–∏—á–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ:**
> ‚Ä¢ –£—Å–ø–µ—à–Ω–æ: **{len(saved_files)}** —Ñ–∞–π–ª–æ–≤
> ‚Ä¢ –†–∞–∑–º–µ—Ä: **{stats['total_size']/1024:.1f} KB**
> ‚Ä¢ –í—Ä–µ–º—è: **{processing_time:.2f}s**

**–û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É!** üö®
                    """,
                    color=0xff0000,
                    timestamp=datetime.utcnow()
                )

                error_embed.add_field(
                    name="üìã –ß–∞—Å—Ç–∏—á–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã",
                    value=f"```\n{chr(10).join([f'‚úì {f['filename']}' for f in saved_files[:5]])}{'...' if len(saved_files) > 5 else ''}\n```" if saved_files else "```\n–ù–∏ –æ–¥–Ω–æ–≥–æ —Ñ–∞–π–ª–∞ –Ω–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ\n```",
                    inline=False
                )

                error_embed.set_footer(
                    text="‚ö†Ô∏è –°–∏—Å—Ç–µ–º–∞ –∑–∞–ø–∏—Å–∏ ‚Ä¢ –¢—Ä–µ–±—É–µ—Ç—Å—è –≤–º–µ—à–∞—Ç–µ–ª—å—Å—Ç–≤–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞"
                )

                # –ü–æ–ø—ã—Ç–∞–µ–º—Å—è –Ω–∞–π—Ç–∏ –∫–∞–Ω–∞–ª –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –æ—à–∏–±–∫–∏
                for channel in guild.text_channels:
                    if channel.permissions_for(guild.me).send_messages:
                        await channel.send(embed=error_embed)
                        break

            except Exception as embed_error:
                logger.error(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —ç–º–±–µ–¥ –æ—à–∏–±–∫–∏: {embed_error}")

            return saved_files
    
    def get_active_recordings_info(self) -> dict:
        """–ü–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤—Å–µ—Ö –∞–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–ø–∏—Å—è—Ö"""
        info = {
            'count': len(self.active_recordings),
            'sessions': {},
            'total_duration': 0
        }
        
        current_time = datetime.utcnow()
        
        for session_id, recording_data in self.active_recordings.items():
            start_time = recording_data.get('start_time', current_time)
            duration = recording_data.get('duration', 0)
            elapsed = (current_time - start_time).total_seconds()
            remaining = max(0, duration - elapsed)
            
            info['sessions'][session_id] = {
                'start_time': start_time.isoformat(),
                'duration': duration,
                'elapsed': elapsed,
                'remaining': remaining,
                'status': 'active' if remaining > 0 else 'finishing'
            }
            info['total_duration'] += duration
        
        return info
    
    async def create_recording_status_embed(self, guild: discord.Guild) -> discord.Embed:
        """–°–æ–∑–¥–∞—Ç—å –∫—Ä–∞—Å–∏–≤—ã–π —ç–º–±–µ–¥ —Å–æ —Å—Ç–∞—Ç—É—Å–æ–º –≤—Å–µ—Ö –∑–∞–ø–∏—Å–µ–π"""
        info = self.get_active_recordings_info()
        
        if info['count'] == 0:
            embed = discord.Embed(
                title="üîá –°–ò–°–¢–ï–ú–ê –ó–ê–ü–ò–°–ò ‚Ä¢ –ü–†–û–°–¢–û–ô",
                description="""
```yaml
‚îå‚îÄ –°–¢–ê–¢–£–° –°–ò–°–¢–ï–ú–´ ‚îÄ‚îÄ‚îÄ‚îê
‚îÇ –ê–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–ø–∏—Å–µ–π: 0
‚îÇ –†–µ–∂–∏–º:          STANDBY
‚îÇ –ù–∞–≥—Ä—É–∑–∫–∞:       0%
‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò
```

üí§ **–°–∏—Å—Ç–µ–º–∞ –∑–∞–ø–∏—Å–∏ –≤ —Ä–µ–∂–∏–º–µ –æ–∂–∏–¥–∞–Ω–∏—è**

> üé§ –ì–æ—Ç–æ–≤–∞ –∫ –Ω–∞—á–∞–ª—É –Ω–æ–≤—ã—Ö –∑–∞–ø–∏—Å–µ–π
> üìä –í—Å–µ —Ä–µ—Å—É—Ä—Å—ã —Å–≤–æ–±–æ–¥–Ω—ã
> ‚úÖ –°–∏—Å—Ç–µ–º–∞ –ø–æ–ª–Ω–æ—Å—Ç—å—é –≥–æ—Ç–æ–≤–∞
                """,
                color=0x808080,  # –°–µ—Ä—ã–π –¥–ª—è –ø—Ä–æ—Å—Ç–æ—è
                timestamp=datetime.utcnow()
            )
        else:
            status_lines = []
            for session_id, session_info in info['sessions'].items():
                status_emoji = "üî¥" if session_info['status'] == 'active' else "üü°"
                status_lines.append(f"{status_emoji} {session_id[:15]}... ({session_info['remaining']:.1f}s)")
            
            embed = discord.Embed(
                title=f"üéôÔ∏è –°–ò–°–¢–ï–ú–ê –ó–ê–ü–ò–°–ò ‚Ä¢ {info['count']} –ê–ö–¢–ò–í–ù–´–• –°–ï–°–°–ò–ô",
                description=f"""
```yaml
‚îå‚îÄ –°–¢–ê–¢–£–° –°–ò–°–¢–ï–ú–´ ‚îÄ‚îÄ‚îÄ‚îê
‚îÇ –ê–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–ø–∏—Å–µ–π: {info['count']:3d}
‚îÇ –†–µ–∂–∏–º:          RECORDING
‚îÇ –ù–∞–≥—Ä—É–∑–∫–∞:       {min(100, info['count'] * 25)}%
‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò
```

üî¥ **–ê–∫—Ç–∏–≤–Ω—ã–µ –∑–∞–ø–∏—Å–∏:**
{chr(10).join(status_lines[:5])}
{'...' if len(status_lines) > 5 else ''}

> ‚è±Ô∏è –û–±—â–µ–µ –≤—Ä–µ–º—è –∑–∞–ø–∏—Å–∏: **{info['total_duration']}—Å**
> üéµ –í—Å–µ —Å–µ—Å—Å–∏–∏ –ø–æ–¥ –∫–æ–Ω—Ç—Ä–æ–ª–µ–º
                """,
                color=0xff0000,  # –ö—Ä–∞—Å–Ω—ã–π –¥–ª—è –∞–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–ø–∏—Å–µ–π
                timestamp=datetime.utcnow()
            )

        embed.add_field(
            name="üìä –°–∏—Å—Ç–µ–º–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è",
            value=f"""```ini
[RECORDING_SYSTEM]
Version=2.0
Status={'ACTIVE' if info['count'] > 0 else 'IDLE'}
Sessions={info['count']}
Max_Concurrent=10
```""",
            inline=False
        )

        embed.set_footer(
            text="üéµ RecordingService ‚Ä¢ –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Å–∏—Å—Ç–µ–º—ã",
            icon_url="https://cdn.discordapp.com/emojis/741339402298785864.gif"
        )

        return embed
