import os
import asyncio
import discord
from utils.logger import logger
from core.exceptions import AudioFileNotFoundException

class AudioService:
    """–°–µ—Ä–≤–∏—Å –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ–º –∞—É–¥–∏–æ"""
   
    @staticmethod
    async def play_audio_file(
        voice_client: discord.VoiceClient,
        file_path: str,
        timeout: int = 30
    ) -> bool:
        """–í–æ—Å–ø—Ä–æ–∏–∑–≤–µ—Å—Ç–∏ –∞—É–¥–∏–æ—Ñ–∞–π–ª —á–µ—Ä–µ–∑ –≥–æ–ª–æ—Å–æ–≤–æ–π –∫–ª–∏–µ–Ω—Ç"""
        try:
            if not voice_client or not voice_client.is_connected():
                logger.warning("üîá –ì–æ–ª–æ—Å–æ–≤–æ–π –∫–ª–∏–µ–Ω—Ç –Ω–µ –ø–æ–¥–∫–ª—é—á—ë–Ω.")
                return False
           
            if not os.path.exists(file_path):
                raise AudioFileNotFoundException(f"üìÅ –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: {file_path}")
           
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞
            file_size = os.path.getsize(file_path)
            if file_size == 0:
                logger.warning(f"üìÅ –§–∞–π–ª –ø—É—Å—Ç: {file_path}")
                return False
           
            source = discord.FFmpegPCMAudio(file_path)
            voice_client.play(source)
            logger.info(f"üéµ –ù–∞—á–∞—Ç–æ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ: {os.path.basename(file_path)} ({file_size} bytes)")
            
            # –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è —Å —Ç–∞–π–º–∞—É—Ç–æ–º
            start_time = asyncio.get_event_loop().time()
            while voice_client.is_playing():
                if asyncio.get_event_loop().time() - start_time > timeout:
                    voice_client.stop()
                    logger.warning(f"‚è±Ô∏è –¢–∞–π–º–∞—É—Ç: –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ ‚Äî {os.path.basename(file_path)}")
                    return False
                await asyncio.sleep(0.1)
           
            logger.success(f"‚úÖ –ê—É–¥–∏–æ —É—Å–ø–µ—à–Ω–æ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–æ: {os.path.basename(file_path)}")
            return True
            
        except AudioFileNotFoundException as e:
            logger.error(f"üìÇ –ê—É–¥–∏–æ—Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: {e}")
            return False
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–∏: {e}")
            return False
    
    @staticmethod
    async def play_question_audio(
        voice_client: discord.VoiceClient,
        question_text: str,
        audio_files: dict
    ) -> bool:
        """–í–æ—Å–ø—Ä–æ–∏–∑–≤–µ—Å—Ç–∏ –∞—É–¥–∏–æ –¥–ª—è —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ –≤–æ–ø—Ä–æ—Å–∞"""
        file_path = audio_files.get(question_text)
        if not file_path:
            logger.warning(f"üé§ –ù–µ—Ç –∞—É–¥–∏–æ—Ñ–∞–π–ª–∞ –¥–ª—è –≤–æ–ø—Ä–æ—Å–∞: ¬´{question_text}¬ª")
            return False
       
        return await AudioService.play_audio_file(voice_client, file_path)
