import asyncio
import discord
from discord.ext import commands

from services.verification_service import VerificationService
from utils.logger import logger
from config.settings import settings

class VoiceEventHandler:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–±—ã—Ç–∏–π –≥–æ–ª–æ—Å–æ–≤—ã—Ö –∫–∞–Ω–∞–ª–æ–≤"""
    
    def __init__(self, bot: commands.Bot):
        self.bot = bot
        self.verification_service = VerificationService()
    
    async def handle_voice_state_update(
        self,
        member: discord.Member,
        before: discord.VoiceState,
        after: discord.VoiceState
    ):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è –≤ –≥–æ–ª–æ—Å–æ–≤–æ–º –∫–∞–Ω–∞–ª–µ"""
        if member.bot:
            return
        
        if after.channel and after.channel.id == settings.voice_channel_id:
            await self._handle_user_joined(member, after.channel)
        
        if before.channel and before.channel.id == settings.voice_channel_id:
            await self._handle_user_left(member, before.channel)
    
    async def _handle_user_joined(self, member: discord.Member, channel: discord.VoiceChannel):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∫ –∫–∞–Ω–∞–ª—É –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏"""
        try:
            voice_client = discord.utils.get(self.bot.voice_clients, guild=member.guild)
            text_channel = self.bot.get_channel(settings.text_channel_id)
            
            if not text_channel:
                logger.error(f"‚ùå –¢–µ–∫—Å—Ç–æ–≤—ã–π –∫–∞–Ω–∞–ª —Å ID {settings.text_channel_id} –Ω–µ –Ω–∞–π–¥–µ–Ω.")
                return
            
            if not voice_client:
                voice_client = await channel.connect()
                await asyncio.sleep(1)
                logger.info(f"üîä –ë–æ—Ç –ø–æ–¥–∫–ª—é—á–∏–ª—Å—è –∫ –≥–æ–ª–æ—Å–æ–≤–æ–º—É –∫–∞–Ω–∞–ª—É: #{channel.name}")
            
            logger.info(f"üü¢ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {member.display_name} –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª—Å—è –∫ –∫–∞–Ω–∞–ª—É –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏.")
            
            await self.verification_service.start_verification(
                member, voice_client, text_channel
            )
            
        except Exception as e:
            logger.error(f"üí• –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {member.display_name}: {e}")
    
    async def _handle_user_left(self, member: discord.Member, channel: discord.VoiceChannel):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã—Ö–æ–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –∫–∞–Ω–∞–ª–∞ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏"""
        try:
            voice_client = discord.utils.get(self.bot.voice_clients, guild=member.guild)
            if not voice_client or not voice_client.is_connected():
                return
            
            human_members = [m for m in channel.members if not m.bot]
            
            logger.info(f"üî¥ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {member.display_name} –ø–æ–∫–∏–Ω—É–ª –∫–∞–Ω–∞–ª –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏.")
            
            if len(human_members) == 0:
                self.verification_service.cleanup_session(member.id)
                await voice_client.disconnect()
                logger.info(f"üîå –ë–æ—Ç –æ—Ç–∫–ª—é—á–∏–ª—Å—è –æ—Ç –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –∫–∞–Ω–∞–ª–∞: #{channel.name} (–∫–∞–Ω–∞–ª –ø—É—Å—Ç)")
                
        except Exception as e:
            logger.error(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã—Ö–æ–¥–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {member.display_name}: {e}")
